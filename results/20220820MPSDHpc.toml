[system]
time = 2022-08-20T08:39:59.714228
system = "Linux"
"node Name" = "mpsd-hpc-gpu-004"
release = "4.9.0-16-amd64"
version = "#1 SMP Debian 4.9.272-2 (2021-07-19)"
machine = "x86_64"
processor = ""

[cpu]
python_version = "3.9.13.final.0 (64 bit)"
cpuinfo_version = [ 8, 0, 0,]
cpuinfo_version_string = "8.0.0"
arch = "X86_64"
bits = 64
count = 80
arch_string_raw = "x86_64"
vendor_id_raw = "GenuineIntel"
brand_raw = "Intel(R) Xeon(R) Gold 6230 CPU @ 2.10GHz"
hz_advertised_friendly = "2.1000 GHz"
hz_actual_friendly = "2.1000 GHz"
hz_advertised = [ 2100000000, 0,]
hz_actual = [ 2100000000, 0,]
stepping = 7
model = 85
family = 6
flags = [ "3dnowprefetch", "abm", "acpi", "adx", "aes", "aperfmperf", "apic", "arat", "arch_capabilities", "arch_perfmon", "art", "avx", "avx2", "avx512bw", "avx512cd", "avx512dq", "avx512f", "avx512vl", "avx512vnni", "bmi1", "bmi2", "bts"
l3_cache_size = 28835840
l2_cache_size = 1048576
l1_data_cache_size = 32768
l1_instruction_cache_size = 32768
l2_cache_line_size = 256
l2_cache_associativity = 6

["numpy copy (small)"]
"mean(s)" = 1.4074678931917464e-5
"std(s)" = 6.0610319187269635e-6
"memory size (MB)" = 0.25
"copy speed (GB/s)" = 17.346088403221536

["numpy copy (large)"]
"mean(s)" = 0.024935183248349597
"std(s)" = 2.114064885310045e-5
"memory size (MB)" = 128.0
"copy speed (GB/s)" = 5.0129970473857846

["numpy float sum (small)"]
"mean(s)" = 2.2599207503455026e-5
"std(s)" = 2.9284381816383875e-5
"array size" = 32768
"sum speed (G element/s)" = 1.449962349121771

["numpy float sum (large)"]
"mean(s)" = 0.012148370168038778
"std(s)" = 2.0498071823652924e-5
"array size" = 16777216
"sum speed (G element/s)" = 1.3810260774024883

["HDF5 IO (small)"]
"array size (MB)" = 0.262144
"writing speed (GB/s)" = 0.8917256241387858
"reading speed (GB/s)" = 0.37349999775834436

["HDF5 IO (large)"]
"array size (MB)" = 134.217728
"writing speed (GB/s)" = 2.404383091741754
"reading speed (GB/s)" = 0.7698445833589772

["pybind11 primes"]
"mean(s)" = 0.2589848741889
"std(s)" = 0.006177933746712911
"number of primes" = 300000
method = "pybind11"

["cython primes"]
"mean(s)" = 0.2246729888021946
"std(s)" = 0.002332869572754061
"number of primes" = 300000
method = "cython"

["numba primes"]
"mean(s)" = 0.3668655216693878
"std(s)" = 0.0003949288448408901
"number of primes" = 300000
method = "numba"

